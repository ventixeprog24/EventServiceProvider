// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/event.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace EventServiceProvider {
  public static partial class EventContract
  {
    static readonly string __ServiceName = "event.EventContract";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::EventServiceProvider.GetAllEventsReply> __Marshaller_event_GetAllEventsReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::EventServiceProvider.GetAllEventsReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::EventServiceProvider.GetEventByIdRequest> __Marshaller_event_GetEventByIdRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::EventServiceProvider.GetEventByIdRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::EventServiceProvider.GetEventReply> __Marshaller_event_GetEventReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::EventServiceProvider.GetEventReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::EventServiceProvider.Event> __Marshaller_event_Event = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::EventServiceProvider.Event.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::EventServiceProvider.EventReply> __Marshaller_event_EventReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::EventServiceProvider.EventReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::EventServiceProvider.DeleteEventRequest> __Marshaller_event_DeleteEventRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::EventServiceProvider.DeleteEventRequest.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::EventServiceProvider.GetAllEventsReply> __Method_GetEvents = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::EventServiceProvider.GetAllEventsReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetEvents",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_event_GetAllEventsReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::EventServiceProvider.GetEventByIdRequest, global::EventServiceProvider.GetEventReply> __Method_GetEventById = new grpc::Method<global::EventServiceProvider.GetEventByIdRequest, global::EventServiceProvider.GetEventReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetEventById",
        __Marshaller_event_GetEventByIdRequest,
        __Marshaller_event_GetEventReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::EventServiceProvider.Event, global::EventServiceProvider.EventReply> __Method_AddEvent = new grpc::Method<global::EventServiceProvider.Event, global::EventServiceProvider.EventReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddEvent",
        __Marshaller_event_Event,
        __Marshaller_event_EventReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::EventServiceProvider.DeleteEventRequest, global::EventServiceProvider.EventReply> __Method_DeleteEvent = new grpc::Method<global::EventServiceProvider.DeleteEventRequest, global::EventServiceProvider.EventReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteEvent",
        __Marshaller_event_DeleteEventRequest,
        __Marshaller_event_EventReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::EventServiceProvider.Event, global::EventServiceProvider.EventReply> __Method_UpdateEvent = new grpc::Method<global::EventServiceProvider.Event, global::EventServiceProvider.EventReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateEvent",
        __Marshaller_event_Event,
        __Marshaller_event_EventReply);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::EventServiceProvider.EventReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of EventContract</summary>
    [grpc::BindServiceMethod(typeof(EventContract), "BindService")]
    public abstract partial class EventContractBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::EventServiceProvider.GetAllEventsReply> GetEvents(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::EventServiceProvider.GetEventReply> GetEventById(global::EventServiceProvider.GetEventByIdRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::EventServiceProvider.EventReply> AddEvent(global::EventServiceProvider.Event request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::EventServiceProvider.EventReply> DeleteEvent(global::EventServiceProvider.DeleteEventRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::EventServiceProvider.EventReply> UpdateEvent(global::EventServiceProvider.Event request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(EventContractBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetEvents, serviceImpl.GetEvents)
          .AddMethod(__Method_GetEventById, serviceImpl.GetEventById)
          .AddMethod(__Method_AddEvent, serviceImpl.AddEvent)
          .AddMethod(__Method_DeleteEvent, serviceImpl.DeleteEvent)
          .AddMethod(__Method_UpdateEvent, serviceImpl.UpdateEvent).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, EventContractBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetEvents, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Protobuf.WellKnownTypes.Empty, global::EventServiceProvider.GetAllEventsReply>(serviceImpl.GetEvents));
      serviceBinder.AddMethod(__Method_GetEventById, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::EventServiceProvider.GetEventByIdRequest, global::EventServiceProvider.GetEventReply>(serviceImpl.GetEventById));
      serviceBinder.AddMethod(__Method_AddEvent, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::EventServiceProvider.Event, global::EventServiceProvider.EventReply>(serviceImpl.AddEvent));
      serviceBinder.AddMethod(__Method_DeleteEvent, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::EventServiceProvider.DeleteEventRequest, global::EventServiceProvider.EventReply>(serviceImpl.DeleteEvent));
      serviceBinder.AddMethod(__Method_UpdateEvent, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::EventServiceProvider.Event, global::EventServiceProvider.EventReply>(serviceImpl.UpdateEvent));
    }

  }
}
#endregion
